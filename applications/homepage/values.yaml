homepage:
  image:
    repository: ghcr.io/gethomepage/homepage
    tag: v1.5.0@sha256:e7fc26f914cf5e7dcd6c566e24ca218addb879aa76478ad4a553b1f9ae48b1d7
  
  env:
    - name: HOMEPAGE_ALLOWED_HOSTS
      value: "apps.diogomota.pt"

  enableRbac: true

  serviceAccount:
    name: ""
    create: true

  service:
    main:
      ports:
        http:
          port: 3000

  controller:
    strategy: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  ingress:
    main:
      enabled: true
      annotations:
        gethomepage.dev/enabled: "false"
        gethomepage.dev/name: "Homepage"
        gethomepage.dev/description: "A modern, secure, highly customizable application dashboard."
        gethomepage.dev/group: "A New Group"
        gethomepage.dev/icon: "homepage"
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
      ingressClassName: "nginx"
      hosts:
        - host: &host "apps.diogomota.pt"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: homepage-tls
          hosts:
            - *host

  config:
    bookmarks:
      - Applications:
          - Centralized, custom dashboard for the homelab, with service API integrations:
              - abbr: Homepage
                href: https://apps.diogomota.pt/
          - Web Page showcasing professional experience and main projects:
              - abbr: Portfolio
                href: https://diogomota.pt/
          - Declarative, GitOps continuous delivery tool for managing homelab's Kubernetes infrastructure:
              - abbr: ArgoCD
                href: https://argocd.diogomota.pt/
    services:
      - My First Group:
          - My First Service:
              href: http://localhost/
              description: Homepage is awesome

    widgets:
      - resources:
          backend: resources
          expanded: true
          cpu: true
          memory: true
      - search:
          provider: duckduckgo
          target: _blank
      - kubernetes:
          cluster:
            show: true
            cpu: true
            memory: true
            showLabel: true
            label: "cluster"
          nodes:
            show: true
            cpu: true
            memory: true
            showLabel: true
    kubernetes:
      mode: cluster
    docker:
    settings:


  persistence:
    logs:
      enabled: true
      type: emptyDir
      mountPath: /app/config/logs